AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  Param01:
    Type: String
    Description: 'Param01'
    Default: "example"
  MyParam2:
    Type: String
    Default: "example"

Resources:


#
#
#   VPC
#
#

  BackuperVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
        - Key: Name
          Value: BackuperVPC
        - Key: CreatedBy
          Value: CloudFormationStack
        - Key: App
          Value: Backuper

  BackuperSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: BackuperVPC
      CidrBlock: 10.0.0.0/24
      AvailabilityZone: 
        Fn::Select: 
          - 0
          - Fn::GetAZs: ""
      Tags:
        - Key: Name
          Value: BackuperSubnet
        - Key: CreatedBy
          Value: CloudFormationStack
        - Key: App
          Value: Backuper

  BackuperSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow all trafic
      VpcId: !Ref BackuperVPC
      Tags:
        - Key: Name
          Value: BackuperSG
        - Key: CreatedBy
          Value: CloudFormationStack
        - Key: App
          Value: Backuper


#
#
#   S3
#
#

  S3BuckerForBackups:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: backuper-bucket-012345678910
      Tags:
        - Key: Name
          Value: BackuperS3
        - Key: CreatedBy
          Value: CloudFormationStack
        - Key: App
          Value: Backuper

#
#
#   AWS Batch
#
#

  BackuperComputeEnvironment:
    Type: AWS::Batch::ComputeEnvironment
    Properties:
      Type: MANAGED
      # ServiceRole: !Ref AWSServiceLinkedRoleForBatch
      ComputeEnvironmentName: backuper-environment
      # EksConfiguration:
      #   EksClusterArn: !Ref BackuperECSCluster
      #   KubernetesNamespace: "ns-test"
      ComputeResources:
        MaxvCpus: 4
        SecurityGroupIds:
          - !Ref BackuperSecurityGroup
        Type: FARGATE
        Subnets:
          - !Ref BackuperSubnet
      Tags: {"Name" : "BackuperComputeEnvironment", "CreatedBy" : "CloudFormationStack", "App" : "Backuper"}
      State: ENABLED

  BackuperJobDefinition:
    Type: AWS::Batch::JobDefinition
    Properties:
      Type: container
      JobDefinitionName: BackuperJobDefinition
      PlatformCapabilities:
        - FARGATE
      ContainerProperties:
        Image: registry.hub.docker.com/interactiver/backuper:latest
        Environment:
          - Name: HELLO
            Value: !Ref Param01
          - Name: KEY
            Value: !Ref MyParam2
            
        Command:
          - /bin/bash
          - -c
          - /backuper/s3_backup_script.sh && /bin/bash -c /backuper/postgre_backup_script.sh
        Privileged: false
        JobRoleArn: !GetAtt  BackuperAmazonECSTaskExecutionRole.Arn
        ExecutionRoleArn: !GetAtt BackuperAmazonECSTaskExecutionRole.Arn
        ReadonlyRootFilesystem: true
        NetworkConfiguration:
          AssignPublicIp: ENABLED
        ResourceRequirements:
          - Type: MEMORY
            Value: 1024
          - Type: VCPU
            Value: 0.5
        LogConfiguration:
          LogDriver: awslogs
          Options:
            "awslogs-group": !Ref BackuperLogGroup
            "awslogs-stream-prefix": "prefix"
      Tags: {"Name" : "BackuperJobDefinition", "CreatedBy" : "CloudFormationStack", "App" : "Backuper"}


  BackuperJobQueue:
    Type: AWS::Batch::JobQueue
    Properties:
      ComputeEnvironmentOrder:
        - Order: 1
          ComputeEnvironment: !Ref BackuperComputeEnvironment
      State: ENABLED
      Priority: 1
      JobQueueName: BackuperJobQueue
      Tags: {"Name" : "BackuperJobQueue", "CreatedBy" : "CloudFormationStack", "App" : "Backuper"}


#
#       
#       ROLES
#  
#


  AWSServiceRoleForBatch:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - batch.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns:
            - arn:aws:iam::aws:policy/service-role/AWSBatchServiceRole
      Tags:
        - Key: Name
          Value: AWSServiceRoleForBatch
        - Key: CreatedBy
          Value: CloudFormationStack
        - Key: App
          Value: Backuper

  AWSServiceLinkedRoleForBatch:
    Type: AWS::IAM::ServiceLinkedRole
    Properties:
      AWSServiceName: batch.amazonaws.com
      Description: Service linked role for AWS Batch



  BackuperAmazonECSTaskExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns:
            - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
            - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
      Tags:
        - Key: Name
          Value: BackuperAmazonECSTaskExecutionRole
        - Key: CreatedBy
          Value: CloudFormationStack
        - Key: App
          Value: Backuper



  BackuperS3PutObjectRoleforBackuper: 
    Type: "AWS::IAM::Policy"
    Properties: 
      PolicyName: "BackuperS3PutObjectRoleforBackuper"
      PolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - Effect: "Allow"
            Action: 
              - 's3:PutObject'
              - 's3:ListBucket'
            Resource:
              - !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref S3BuckerForBackups
                  - /*
      Roles: 
        - Ref: "BackuperAmazonECSTaskExecutionRole"


#
#       
#       Logs
#  
#

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: Backuper
      RetentionInDays: 7